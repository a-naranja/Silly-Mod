package data.scSkills;

import com.fs.starfarer.api.campaign.CampaignFleetAPI;
import com.fs.starfarer.api.combat.MutableShipStatsAPI;
import com.fs.starfarer.api.combat.ShipAPI;
import com.fs.starfarer.api.combat.ShipVariantAPI;
import com.fs.starfarer.api.fleet.FleetMemberAPI;
import com.fs.starfarer.api.impl.campaign.DModManager;
import com.fs.starfarer.api.ui.TooltipMakerAPI;
import com.fs.starfarer.api.util.Misc;
import second_in_command.SCData;
import second_in_command.specs.SCBaseSkillPlugin;

public class silly_skill10 extends SCBaseSkillPlugin {


    @Override
    public String getAffectsString() {
        return "Cruisers";
    }

    public final float getFleetDP(CampaignFleetAPI fleet) {
        float DP = 0F;
        for(FleetMemberAPI member : fleet.getFleetData().getMembersListCopy()) {
            DP += member.getDeploymentPointsCost();
        }
        return DP;
    }
    @Override
    public void applyEffectsBeforeShipCreation(SCData data, MutableShipStatsAPI stats, ShipVariantAPI variant, ShipAPI.HullSize hullSize, String id){
        int getdmods = DModManager.getNumDMods(variant);
        float redmult = 1.0f;
        int dmod = 0;
        for(int i = getdmods; dmod < i; ++dmod) {
            redmult *= 0.8f;
        }
        int DP = (int)this.getFleetDP(data.getFleet());
        if(hullSize == ShipAPI.HullSize.CRUISER){
            stats.getSuppliesPerMonth().modifyMult("Black Ops", redmult);
            stats.getBallisticWeaponFluxCostMod().modifyPercent("Black Ops",0.9f);
            stats.getEnergyWeaponFluxCostMod().modifyPercent("Black Ops",0.9f);
            stats.getMissileWeaponFluxCostMod().modifyPercent("Black Ops",0.9f);

            if(DP<=180f) {
                stats.getBallisticWeaponDamageMult().modifyPercent("Black Ops", 20f);
                stats.getEnergyWeaponDamageMult().modifyPercent("Black Ops", 20f);
                stats.getMissileWeaponDamageMult().modifyPercent("Black Ops", 20f);
            }
        }
    }
    @Override
    public void addTooltip(SCData data, TooltipMakerAPI tt) {
        int DP = (int)this.getFleetDP(data.getFleet());
        tt.addPara("Decreases monthly maintenance by 20%% per D-Mod",0f, Misc.getHighlightColor(),Misc.getHighlightColor());
        tt.addPara("Reduces the flux generated by weapons by 10%%",0f,Misc.getHighlightColor(),Misc.getHighlightColor());
        tt.addPara("Increases damage by 20%% if your fleetwide deployment points are under 180",0f,Misc.getHighlightColor(),Misc.getHighlightColor());
        tt.addPara("*The fleet currently has "+DP+" deployment points", 0f, Misc.getGrayColor(),Misc.getHighlightColor());
    }
}