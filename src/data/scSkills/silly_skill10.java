package data.scSkills;

import com.fs.starfarer.api.combat.MutableShipStatsAPI;
import com.fs.starfarer.api.combat.ShipAPI;
import com.fs.starfarer.api.combat.ShipVariantAPI;
import com.fs.starfarer.api.impl.campaign.DModManager;
import com.fs.starfarer.api.ui.TooltipMakerAPI;
import com.fs.starfarer.api.util.Misc;
import second_in_command.SCData;
import second_in_command.specs.SCBaseSkillPlugin;


public class silly_skill10 extends SCBaseSkillPlugin {
    @Override
    public String getAffectsString() {
        return "Cruisers";
    }

    @Override
    public void addTooltip(SCData scData, TooltipMakerAPI tt) {
        tt.addPara("Decreases monthly maintenance by 20%% per D-Mod",0f, Misc.getHighlightColor(),Misc.getHighlightColor());
        tt.addPara("Reduces the flux generated by weapons by 10%%",0f,Misc.getHighlightColor(),Misc.getHighlightColor());
        tt.addPara("Increases damage by 20%% if your fleet points are under 180",0f,Misc.getHighlightColor(),Misc.getHighlightColor());
    }
    @Override
    public void applyEffectsBeforeShipCreation(SCData data, MutableShipStatsAPI stats, ShipVariantAPI variant, ShipAPI.HullSize hullSize, String id){
        int getdmods = DModManager.getNumDMods(variant);
        float redmult = 1.0f;
        int dmod = 0;
        for(int i = getdmods; dmod < i; ++dmod) {
            redmult *= 0.8f;
        }
        stats.getSuppliesPerMonth().modifyMult(id, redmult);
        stats.getBallisticWeaponFluxCostMod().modifyPercent(id,0.9f);
        stats.getEnergyWeaponFluxCostMod().modifyPercent(id,0.9f);
        stats.getMissileWeaponFluxCostMod().modifyPercent(id,0.9f);
        float fp = data.getFleet().getFleetData().getFleetPointsUsed();
        if(fp<=180){
            stats.getBallisticWeaponDamageMult().modifyMult(id,20f);
            stats.getEnergyWeaponDamageMult().modifyMult(id,20f);
            stats.getMissileWeaponDamageMult().modifyMult(id,20f);
        }
    }
}
